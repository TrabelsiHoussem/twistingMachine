/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pfe;


import Connexion.Connexion;
import java.io.IOException;

import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author houst
 */
public class Consommation extends javax.swing.JFrame {

    DefaultTableModel model = new DefaultTableModel();
    Connexion cnn = new Connexion();
    //transferer les requetes avec la base
    Statement stm;
    boolean focuseproduit = false;
    boolean focuspersonne=false;
    String sproduit = "";
    String spersonne="";
    //Runtime runtime ;
    
    //Session sess;
//String hostname = "localhost";
		//String username = "pi";
		//String password = "raspberry";
                //Connection conn = new Connection(hostname);
//boolean isAuthenticated;
    public Consommation() {
        initComponents();
       
        try {
            Runtime.getRuntime().exec("gpio mode 25 out");
        } catch (IOException ex) {
            Logger.getLogger(Consommation.class.getName()).log(Level.SEVERE, null, ex);
        }
;
             //Runtime.getRuntime().exec("gpio write 25 1");
           
       
//        try {
//            conn.connect();
//             isAuthenticated = conn.authenticateWithPassword(username, password);
//        } catch (IOException ex) {
//            Logger.getLogger(Commandes.class.getName()).log(Level.SEVERE, null, ex);
//        }
        image.setVisible(false);
        model.addColumn("Date");
        model.addColumn("Reference");
        model.addColumn("Matriculproduit");
        model.addColumn("Numdecommande");
        model.addColumn("QunatiteSaisie");
        model.addColumn("QunatiteRestante");
        model.addColumn("MatriculePersonne");
        try {
            stm = cnn.ObtenirConnexion().createStatement();
            ResultSet Rs = stm.executeQuery("Select * from consommation");
            while (Rs.next()) {
                //model.addRow(new Object[]{Rs.getString("Référence"), Rs.getString("Matricule"), Rs.getString("NumdeCommande"), Rs.getString("QteSaisie"), Rs.getString("QteRestante"), Rs.getString("Date"), Rs.getString("MatriculeResponsable")});
                model.addRow(new Object[]{Rs.getString("Date"), Rs.getString("Référence"), Rs.getString("Matricule"), Rs.getString("NumdeCommande"), Rs.getString("QteSaisie"), Rs.getString("QteRestante"), Rs.getString("MatriculeResponsable")});
            }
        } catch (Exception e) {
            System.err.println(e);
        }
        table.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        bt1 = new javax.swing.JButton();
        bt3 = new javax.swing.JButton();
        bt2 = new javax.swing.JButton();
        bt5 = new javax.swing.JButton();
        bt6 = new javax.swing.JButton();
        bt4 = new javax.swing.JButton();
        bt7 = new javax.swing.JButton();
        bt8 = new javax.swing.JButton();
        bt9 = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        bt0 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        tfproduit = new javax.swing.JTextField();
        tf_personne = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnplus = new javax.swing.JButton();
        btnmoins = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        image = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bt1.setText("1");
        bt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt1ActionPerformed(evt);
            }
        });

        bt3.setText("3");
        bt3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt3ActionPerformed(evt);
            }
        });

        bt2.setText("2");
        bt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt2ActionPerformed(evt);
            }
        });

        bt5.setText("5");
        bt5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt5ActionPerformed(evt);
            }
        });

        bt6.setText("6");
        bt6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt6ActionPerformed(evt);
            }
        });

        bt4.setText("4");
        bt4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt4ActionPerformed(evt);
            }
        });

        bt7.setText("7");
        bt7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt7ActionPerformed(evt);
            }
        });

        bt8.setText("8");
        bt8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt8ActionPerformed(evt);
            }
        });

        bt9.setText("9");
        bt9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt9ActionPerformed(evt);
            }
        });

        clear.setText("CLEAR");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        bt0.setText("0");
        bt0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt0ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bt1)
                            .addComponent(bt4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(bt5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bt6))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(bt2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bt3)))
                        .addGap(30, 30, 30))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(clear, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(bt7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bt8)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bt9)
                            .addComponent(bt0))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt9, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt0, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tfproduit.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfproduitFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfproduitFocusLost(evt);
            }
        });
        tfproduit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfproduitActionPerformed(evt);
            }
        });

        tf_personne.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_personneFocusGained(evt);
            }
        });

        jLabel1.setText("id_produit");

        jLabel2.setText("id_personne");

        btnplus.setText("+");
        btnplus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnplusActionPerformed(evt);
            }
        });

        btnmoins.setText("-");
        btnmoins.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmoinsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tf_personne)
                    .addComponent(tfproduit)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnmoins, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnplus, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)))
                .addContainerGap(104, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfproduit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_personne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnmoins)
                    .addComponent(btnplus))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        table.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Referance", "Matricule commande", "NumdeCommande", "Quantite saisie", "Quantité restante", "Matricule personne"
            }
        ));
        jScrollPane2.setViewportView(table);

        image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/warning (1).png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 712, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(image)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(image)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(75, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnmoinsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmoinsActionPerformed
        // TODO add your handling code here:

        try {

            String idpersonne = tf_personne.getText().toString();
            String idproduit = tfproduit.getText().toString();

            String sql = "select * from produit where Reference = '" + idproduit + "'";
            //String sql2="select Reference from personne where Reference = '" + idpersonne + "'";
            ResultSet resultat = stm.executeQuery(sql);
            int count = 0;
            //ceci pour verisier l'existance d'email 
            if (resultat.next()) {

                String matricule = resultat.getString("Matricule");
                String reference = resultat.getString("Reference");
                String numdecommande = resultat.getString("NumdeCommande");
                int quantiteinitial = resultat.getInt("Quantite");

                DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
                Date date1 = new Date();

                String date = dateFormat.format(date1);

                String MatriculeResponsable = tf_personne.getText();

                String requete = "insert into consommation(Référence,Matricule,NumdeCommande,QteSaisie,QteRestante,Date,MatriculeResponsable)VALUES('" + reference + "','" + matricule + "','" + numdecommande + "','" + quantiteinitial + "','" + quantiteinitial + "','" + date + "','" + MatriculeResponsable + "')";
                stm.executeUpdate(requete);
                //JOptionPane.showMessageDialog(null, "le produit est bien ajouter");

			/* maintenant deja connecter  */

			
                        
                        
                        
                       //Session sess = conn.openSession();
                   //  if (isAuthenticated == false)
				//throw new IOException("Authentication failed.");

			/* creer un session */

			
			//sess.execCommand("");
			
                try {
                    Statement stm1 = cnn.ObtenirConnexion().createStatement();
                    ResultSet Rs = stm1.executeQuery("Select * from consommation where Référence='" + reference + "' ");
                    while (Rs.next()) {

                        String r = Rs.getString("QteRestante");
                        int i = Integer.parseInt(r);
                        i = i - 1;

                        if (i <253) {
                            JOptionPane.showMessageDialog(null, "le stocke sous la ref " + reference + " va se terminer");
                            System.out.println("stock va terminer");
                            image.setVisible(true);
                            //sess.execCommand("gpio -g mode 26 out && gpio -g write 26 1");
                            //runtime.exec("gpio write 25 1");
                              Runtime.getRuntime().exec("gpio write 25 1");

                        }else{
                            //runtime.exec("gpio write 25 0");
                            Runtime.getRuntime().exec("gpio write 25 0");
                        }
                        //model.6addRow(new Object[]{Rs.getString("Référence"), Rs.getString("Matricule"), Rs.getString("NumdeCommande"), Rs.getString("QteSaisie"),r, Rs.getString("Date"), Rs.getString("Heure"), Rs.getString("MatriculeResponsable")});
                        stm1.executeUpdate("UPDATE consommation SET QteRestante ='" + i + "' where Référence='" + Rs.getString("Référence") + "' ");

                    }
                   
                } catch (Exception e) {
                    System.err.println(e);
                }

            }


        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        
        afficher();
        tf_personne.setText("");
        tfproduit.setText("");


    }//GEN-LAST:event_btnmoinsActionPerformed

    private void bt0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt0ActionPerformed
        if (focuseproduit == true) {

            sproduit += "0";
            tfproduit.setText(sproduit);
        }
         if(focuspersonne==true){
           
            spersonne+="0";
            tf_personne.setText(spersonne);
        }
    }//GEN-LAST:event_bt0ActionPerformed

    private void tfproduitFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfproduitFocusGained
        focuseproduit = true;
        focuspersonne=false;
        System.out.println(focuseproduit);
        
    }//GEN-LAST:event_tfproduitFocusGained

    private void tfproduitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfproduitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfproduitActionPerformed

    private void tfproduitFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfproduitFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_tfproduitFocusLost

    private void bt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt1ActionPerformed
        // TODO add your handling code here:
        if (focuseproduit == true) {

            sproduit += "1";
            tfproduit.setText(sproduit);
        }
         if(focuspersonne==true){
           
            spersonne+="1";
            tf_personne.setText(spersonne);
        }
    }//GEN-LAST:event_bt1ActionPerformed

    private void bt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt2ActionPerformed
        if (focuseproduit == true) {

            sproduit += "2";
            tfproduit.setText(sproduit);
        }  
         if(focuspersonne==true){
           
            spersonne+="2";
            tf_personne.setText(spersonne);
        }
    }//GEN-LAST:event_bt2ActionPerformed

    private void bt3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt3ActionPerformed
        if (focuseproduit == true) {

            sproduit += "3";
            tfproduit.setText(sproduit);
        }      
         if(focuspersonne==true){
           
            spersonne+="3";
            tf_personne.setText(spersonne);
        }
    }//GEN-LAST:event_bt3ActionPerformed

    private void bt4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt4ActionPerformed
        // TODO add your handling code here:
        if (focuseproduit == true) {

            sproduit += "4";
            tfproduit.setText(sproduit);
        } 
         if(focuspersonne==true){
           
            spersonne+="4";
            tf_personne.setText(spersonne);
        }

    }//GEN-LAST:event_bt4ActionPerformed

    private void bt5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt5ActionPerformed
        if (focuseproduit == true) {

            sproduit += "5";
            tfproduit.setText(sproduit);
        }
         if(focuspersonne==true){
           
            spersonne+="5";
            tf_personne.setText(spersonne);
        }
    }//GEN-LAST:event_bt5ActionPerformed

    private void bt6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt6ActionPerformed
        if (focuseproduit == true) {

            sproduit += "6";
            tfproduit.setText(sproduit);
        }
         if(focuspersonne==true){
           
            spersonne+="6";
            tf_personne.setText(spersonne);
        }
    }//GEN-LAST:event_bt6ActionPerformed

    private void bt7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt7ActionPerformed
        if (focuseproduit == true) {

            sproduit += "7";
            tfproduit.setText(sproduit);
        }
         if(focuspersonne==true){
           
            spersonne+="7";
            tf_personne.setText(spersonne);
        }
    }//GEN-LAST:event_bt7ActionPerformed

    private void bt8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt8ActionPerformed
        if (focuseproduit == true) {

            sproduit += "8";
            tfproduit.setText(sproduit);
        }
          if(focuspersonne==true){
           
            spersonne+="8";
            tf_personne.setText(spersonne);
        } 
    }//GEN-LAST:event_bt8ActionPerformed

    private void bt9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt9ActionPerformed
        if (focuseproduit == true) {

            sproduit += "9";
            tfproduit.setText(sproduit);
        }
          if(focuspersonne==true){
           
            spersonne+="9";
            tf_personne.setText(spersonne);
        } 
    }//GEN-LAST:event_bt9ActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        if(focuseproduit==true){
           
            sproduit="";
            tfproduit.setText(sproduit);
        }
        if(focuspersonne==true){
           
            spersonne="";
            tf_personne.setText(spersonne);
        } 
    }//GEN-LAST:event_clearActionPerformed

    private void tf_personneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_personneFocusGained
         focuseproduit = false;
        focuspersonne=true;
    }//GEN-LAST:event_tf_personneFocusGained

    private void btnplusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnplusActionPerformed
       // TODO add your handling code here:

        try {

            String idpersonne = tf_personne.getText().toString();
            String idproduit = tfproduit.getText().toString();

            String sql = "select * from produit where Reference = '" + idproduit + "'";
            //String sql2="select Reference from personne where Reference = '" + idpersonne + "'";
            ResultSet resultat = stm.executeQuery(sql);
            int count = 0;
            //ceci pour verisier l'existance d'email 
            if (resultat.next()) {

                String matricule = resultat.getString("Matricule");
                String reference = resultat.getString("Reference");
                String numdecommande = resultat.getString("NumdeCommande");
                int quantiteinitial = resultat.getInt("Quantite");

                DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
                Date date1 = new Date();

                String date = dateFormat.format(date1);

                String MatriculeResponsable = tf_personne.getText();

                String requete = "insert into consommation(Référence,Matricule,NumdeCommande,QteSaisie,QteRestante,Date,MatriculeResponsable)VALUES('" + reference + "','" + matricule + "','" + numdecommande + "','" + quantiteinitial + "','" + quantiteinitial + "','" + date + "','" + MatriculeResponsable + "')";
                stm.executeUpdate(requete);
                //JOptionPane.showMessageDialog(null, "le produit est bien ajouter");

                try {
                    Statement stm1 = cnn.ObtenirConnexion().createStatement();
                    ResultSet Rs = stm1.executeQuery("Select * from consommation where Référence='" + reference + "' ");
                    while (Rs.next()) {

                        String r = Rs.getString("QteRestante");
                        int i = Integer.parseInt(r);
                        i = i + 1;

                        if (i >=253) {
                            //JOptionPane.showMessageDialog(null, "le stocke sous la ref " + reference + " va se terminer");
                            System.out.println("stock chargé");
                            image.setVisible(false);
                            //sess.execCommand("gpio -g mode 26 out && gpio -g write 26 1");
                            //runtime.exec("gpio write 25 1");
                              Runtime.getRuntime().exec("gpio write 25 0");

                        }else{
                            //runtime.exec("gpio write 25 0");
                            Runtime.getRuntime().exec("gpio write 25 1");
                        }
                        
                        //model.addRow(new Object[]{Rs.getString("Référence"), Rs.getString("Matricule"), Rs.getString("NumdeCommande"), Rs.getString("QteSaisie"),r, Rs.getString("Date"), Rs.getString("Heure"), Rs.getString("MatriculeResponsable")});
                        stm1.executeUpdate("UPDATE consommation SET QteRestante ='" + i + "' where Référence='" + Rs.getString("Référence") + "' ");

                    }
                   
                } catch (Exception e) {
                    System.err.println(e);
                }

            }


        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        
        afficher();
        tf_personne.setText("");
        tfproduit.setText("");

        // TODO add your handling code here:
    }//GEN-LAST:event_btnplusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Consommation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Consommation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Consommation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Consommation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Consommation().setVisible(true);
            }
        });
    }

    private void afficher() {
//        try {
//            model.setRowCount(0);
//            stm = cnn.ObtenirConnexion().createStatement();
//            ResultSet Rs = stm.executeQuery("Select * from produit");
//            while (Rs.next()) {
//                model.addRow(new Object[]{Rs.getString("Id"), Rs.getString("Matricule"), Rs.getString("Reference"), Rs.getString("NumdeCommande"),
//                    Rs.getString("Quantite")});
//
//            }
//        } catch (Exception e) {
//            System.err.println(e);
//        }
//
//        table.setModel(model);
 Statement stm2;
        try {
            model.setRowCount(0);
            stm2 = cnn.ObtenirConnexion().createStatement();
            ResultSet Rs = stm2.executeQuery("Select * from consommation");
            while (Rs.next()) {
                //String r= ;
                // int i=Integer.parseInt(r);
                //i=i-1;
                //model.addRow(new Object[]{Rs.getString("Référence"), Rs.getString("Matricule"), Rs.getString("NumdeCommande"), Rs.getString("QteSaisie"),r, Rs.getString("Date"), Rs.getString("MatriculeResponsable")});
                model.addRow(new Object[]{Rs.getString("Date"), Rs.getString("Référence"), Rs.getString("Matricule"), Rs.getString("NumdeCommande"), Rs.getString("QteSaisie"), Rs.getString("QteRestante"), Rs.getString("MatriculeResponsable")});

//stm.executeUpdate("UPDATE consommation SET QteRestante ='"+i+"' where Référence='"+Rs.getString("Référence")+"' ");
            }
        } catch (Exception e) {
            System.err.println(e);
        }
        table.setModel(model);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt0;
    private javax.swing.JButton bt1;
    private javax.swing.JButton bt2;
    private javax.swing.JButton bt3;
    private javax.swing.JButton bt4;
    private javax.swing.JButton bt5;
    private javax.swing.JButton bt6;
    private javax.swing.JButton bt7;
    private javax.swing.JButton bt8;
    private javax.swing.JButton bt9;
    private javax.swing.JButton btnmoins;
    private javax.swing.JButton btnplus;
    private javax.swing.JButton clear;
    private javax.swing.JLabel image;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable table;
    private javax.swing.JTextField tf_personne;
    private javax.swing.JTextField tfproduit;
    // End of variables declaration//GEN-END:variables
}
